
variables:
    PYTEST_BASE: bin/py.test -n 2 -vvs
    PYTEST_ALL: bin/py.test -n 2 -vvs --test-suite=all


jobs:

################################################################################
# These jobs are using VMs and Azure-provided Pythons
################################################################################

    - template: etc/ci/azure-linux.yml
      parameters:
          os_name: ubuntu_16
          image_name: ubuntu-16.04
          python_versions: ['2.7']
          test_suites:
              misc: $(PYTEST_ALL) --ignore=tests/scancode --ignore=tests/extractcode --ignore=tests/licensedcode --ignore=tests/cluecode --ignore=tests/packagedcode
              scancode: $(PYTEST_ALL) tests/scancode
              extractcode: $(PYTEST_ALL) tests/extractcode
              license_base: $(PYTEST_ALL) tests/licensedcode --ignore=tests/licensedcode/test_zzzz_cache.py --ignore=tests/licensedcode/test_detection_datadriven.py
              license_main: $(PYTEST_ALL) tests/licensedcode/test_detection_datadriven.py -k TestLicenseDataDriven
              license_retro: $(PYTEST_ALL) tests/licensedcode/test_detection_datadriven.py -k TestLicenseRetrographyDataDriven
              license_spdx: $(PYTEST_ALL) tests/licensedcode/test_detection_datadriven.py -k TestLicenseSpdxDataDriven
              license_tools: $(PYTEST_ALL) tests/licensedcode/test_detection_datadriven.py -k TestLicenseToolsDataDriven
              license_slic: $(PYTEST_ALL) tests/licensedcode/test_detection_datadriven.py -k TestSlicDataDriven
              license_foss: $(PYTEST_ALL) tests/licensedcode/test_detection_datadriven.py -k TestFossLicDataDriven
              license_deb: $(PYTEST_ALL) tests/licensedcode/test_detection_datadriven.py -k TestDebLicCheckTestsDataDriven
              license_cache: $(PYTEST_ALL) tests/licensedcode/test_zzzz_cache.py
              cluecode: $(PYTEST_ALL) tests/cluecode
              packagedcode: $(PYTEST_ALL) tests/packagedcode
      
    - template: etc/ci/azure-linux.yml
      parameters:
          os_name: ubuntu_16
          image_name: ubuntu-16.04
          python_versions: ['3.6']
          test_suites:
              commoncode: $(PYTEST_BASE) tests/commoncode
              misc: $(PYTEST_BASE) --ignore=tests/commoncode --ignore=tests/scancode --ignore=tests/extractcode --ignore=tests/licensedcode --ignore=tests/cluecode --ignore=tests/packagedcode
              scancode: $(PYTEST_BASE) tests/scancode
              extractcode: $(PYTEST_BASE) tests/extractcode
              license: $(PYTEST_BASE) tests/licensedcode --ignore=tests/licensedcode/test_zzzz_cache.py --ignore=tests/licensedcode/test_detection_datadriven.py
              license_cache: $(PYTEST_BASE) tests/licensedcode/test_zzzz_cache.py
              cluecode: $(PYTEST_BASE) tests/cluecode
              packagedcode: $(PYTEST_BASE) tests/packagedcode

    - template: etc/ci/azure-mac.yml
      parameters:
          os_name: macos_1013
          image_name: macos-10.13
          python_versions: ['2.7', '3.6']
          test_suites:
              commoncode: $(PYTEST_BASE) tests/commoncode
              misc: $(PYTEST_BASE) --ignore=tests/commoncode --ignore=tests/scancode --ignore=tests/extractcode --ignore=tests/licensedcode --ignore=tests/cluecode --ignore=tests/packagedcode
              scancode: $(PYTEST_BASE) tests/scancode
              extractcode: $(PYTEST_BASE) tests/extractcode
              license: $(PYTEST_BASE) tests/licensedcode --ignore=tests/licensedcode/test_zzzz_cache.py --ignore=tests/licensedcode/test_detection_datadriven.py
              license_cache: $(PYTEST_BASE) tests/licensedcode/test_zzzz_cache.py
              cluecode: $(PYTEST_BASE) tests/cluecode
              packagedcode: $(PYTEST_BASE) tests/packagedcode

    - template: etc/ci/azure-mac.yml
      parameters:
          os_name: macos_1014
          image_name: macos-10.14
          python_versions: ['2.7', '3.6']
          test_suites:
              scancode: $(PYTEST_BASE) tests/scancode

    - template: etc/ci/azure-win.yml
      parameters:
          os_name: Win_2016_32
          image_name: vs2017-win2016
          python_versions: ['2.7', '3.6']
          python_architecture: x86
          test_suites:
              commoncode: $(PYTEST_BASE) tests/commoncode
              misc: $(PYTEST_BASE) --ignore=tests/commoncode --ignore=tests/scancode --ignore=tests/extractcode --ignore=tests/licensedcode --ignore=tests/cluecode --ignore=tests/packagedcode
              scancode: $(PYTEST_BASE) tests/scancode
              extractcode: $(PYTEST_BASE) tests/extractcode
              license: $(PYTEST_BASE) tests/licensedcode --ignore=tests/licensedcode/test_zzzz_cache.py --ignore=tests/licensedcode/test_detection_datadriven.py
              license_cache: $(PYTEST_BASE) tests/licensedcode/test_zzzz_cache.py
              cluecode: $(PYTEST_BASE) tests/cluecode
              packagedcode: $(PYTEST_BASE) tests/packagedcode

#    - template: etc/ci/azure-win.yml
#      parameters:
#          os_name: Win_2016_64
#          image_name: vs2017-win2016
#          python_versions: ['2.7', '3.6']
#          python_architecture: x64
#          test_suites:
#              commoncode: $(PYTEST_BASE) tests/commoncode
#              misc: $(PYTEST_BASE) --ignore=tests/commoncode --ignore=tests/scancode --ignore=tests/extractcode --ignore=tests/licensedcode --ignore=tests/cluecode --ignore=tests/packagedcode
#              scancode: $(PYTEST_BASE) tests/scancode
#              extractcode: $(PYTEST_BASE) tests/extractcode
#              license: $(PYTEST_BASE) tests/licensedcode --ignore=tests/licensedcode/test_zzzz_cache.py --ignore=tests/licensedcode/test_detection_datadriven.py
#              license_cache: $(PYTEST_BASE) tests/licensedcode/test_zzzz_cache.py
#              cluecode: $(PYTEST_BASE) tests/cluecode
#              packagedcode: $(PYTEST_BASE) tests/packagedcode
#
    - job: Build_release
      pool:
          vmImage: ubuntu-16.04
      steps:
          - task: UsePythonVersion@0
            inputs:
                versionSpec: '2.7'
            displayName: 'Install Python 2.7'
          - script: ./etc/release/release.sh
            displayName: 'Build installable releases'


################################################################################
# These jobs are using containers and their own Python
################################################################################

#    - template: etc/ci/azure-container-deb.yml
#      parameters:
#          os_name: ubuntu_16_xenial_py27
#          container: ubuntu:xenial
#          python_path: python2.7
#          install_python: sudo apt-get install -y python python-dev
#          matrix:
#              commoncode:
#                  test_suite: bin/pytest -vvs tests/commoncode
#
#    - template: etc/ci/azure-container-deb.yml
#      parameters:
#          os_name: ubuntu_16_xenial_py36
#          container: ubuntu:xenial
#          python_path: python3.6
#          install_python: |
#             sudo apt-get -y install software-properties-common
#             sudo add-apt-repository -y ppa:deadsnakes
#             sudo apt-get -y update
#             sudo apt-get install -y python3.6 python3.6-venv python3.6-dev
#
#    - template: etc/ci/azure-container-deb.yml
#      parameters:
#          os_name: ubuntu_18_bionic_py27
#          container: ubuntu:bionic
#          python_path: python2.7
#          install_python: sudo apt-get install -y python python-dev
#
#    - template: etc/ci/azure-container-deb.yml
#      parameters:
#          name: ubuntu_18_bionic_py36
#          container: ubuntu:bionic
#          python_path: python3.6
#          install_python: sudo apt-get install -y python3.6 python3.6-venv python3.6-dev
#
#
#    - template: etc/ci/azure-container-rpm.yml
#      parameters:
#          os_name: centos7_py27
#          container: centos:7
#          python_path: python2.7
#          install_python: sudo yum install -y python python27-devel
#
#    - template: etc/ci/azure-container-rpm.yml
#      parameters:
#          os_name: centos7_py36
#          container: centos:7
#          python_path: python3.6
#          install_python: |
#              set -e -x
#              sudo yum install -y epel-release
#              sudo yum install -y python36 python36-devel python36-virtualenv
#
#
#    - template: etc/ci/azure-container-rpm.yml
#      parameters:
#          os_name: manylinux1_64_py27
#          container: quay.io/pypa/manylinux1_x86_64:latest
#          python_path: /opt/python/cp27-cp27mu/bin/python
#          install_packages: echo "No extra packages for now"
#          install_python: echo "Python is pre-installed"
#
#    - template: etc/ci/azure-container-rpm.yml
#      parameters:
#          os_name: manylinux1_64_py36
#          container: quay.io/pypa/manylinux1_x86_64:latest
#          python_path: /opt/python/cp36-cp36m/bin/python
#          install_packages: echo "No extra packages for now"
#          install_python: echo "Python is pre-installed"
#
#    - template: etc/ci/azure-container-rpm.yml
#      parameters:
#          os_name: manylinux2010_64_py27
#          container: quay.io/pypa/manylinux2010_x86_64:latest
#          python_path: /opt/python/cp27-cp27mu/bin/python
#          install_packages: echo "No extra packages for now"
#          install_python: echo "Python is pre-installed"
#
#    - template: etc/ci/azure-container-rpm.yml
#      parameters:
#          os_name: manylinux2010_64_py36
#          container: quay.io/pypa/manylinux2010_x86_64:latest
#          python_path: /opt/python/cp36-cp36m/bin/python
#          install_packages: echo "No extra packages for now"
#          install_python: echo "Python is pre-installed"
#
#    - template: etc/ci/azure-container-rpm.yml
#      parameters:
#          os_name: manylinux2010_64_py37
#          container: quay.io/pypa/manylinux2010_x86_64:latest
#          python_path: /opt/python/cp37-cp37m/bin/python
#          install_packages: echo "No extra packages for now"
#          install_python: echo "Python is pre-installed"
#
#
#    - template: etc/ci/azure-container-rpm.yml
#      parameters:
#          os_name: fedora_30_py27
#          container: fedora:30
#          package_manager: dnf
#          python_path: python2.7
#          install_python: |
#              set -e -x
#              sudo dnf install -y python2 python2-devel
#
#    - template: etc/ci/azure-container-rpm.yml
#      parameters:
#          os_name: fedora_30_py37
#          container: fedora:30
#          package_manager: dnf
#          python_path: python3.7
#          install_python: |
#              set -e -x
#              sudo dnf install -y python3 python3-devel python3-virtualenv
#
#
#    - template: etc/ci/azure-container-deb.yml
#      parameters:
#          os_name: debian_9_stretch_py27
#          container: debian:stretch
#          python_path: python2.7
#          install_python: sudo apt-get install -y python python-dev


################################################################################
# These jobs are using containers and their own Python: FAILING FOR NOW
################################################################################

#    - template: etc/ci/azure-container-deb.yml
#      parameters:
#          os_name: debian_9_stretch_py36
#          container: debian:stretch
#          python_path: python3.6
#          install_python: |
#            set -e -x
#            sudo apt-get install -y \
#                libncurses5-dev libncursesw5-dev libreadline6-dev \
#                libdb-dev libgdbm-dev libsqlite3-dev libssl-dev \
#                libbz2-dev libexpat1-dev liblzma-dev zlib1g-dev \
#                libcurl4-openssl-dev libpam0g-dev \
#                libsqlite3-dev tk-dev libffi-dev \
#                curl
#            export PYVER=3.6.8
#            curl -o Python-$PYVER.tgz https://www.python.org/ftp/python/$PYVER/Python-$PYVER.tgz
#            tar -xvf Python-$PYVER.tgz
#            cd Python-$PYVER
#            ./configure --enable-optimizations
#            make -j8
#            sudo make altinstall
