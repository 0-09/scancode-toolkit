#!/usr/bin/env bash
#
# Copyright (c) nexB Inc. http://www.nexb.com/ - All rights reserved.
#

set -e

if [[ "$OS" == "Windows_NT" ]]; then
    echo "You seem to be running on Windows under Cygwin / MSYS(2),"
    echo "like e.g. Git for Windows Bash. This script does not properly work in"
    echo "this scenario. As a Windows user, please run 'configure.bat' from a "
    echo "regular command prompt instead."
    exit 1
fi


################################
# A configuration script to set things up: create a virtualenv and install
# update thirdparty packages

function cli_help {
    echo An initial configuration script
    echo "  usage: ./configure [options]"
    echo
    echo The default is to configure for regular use.
    echo The script will attempt to find a suitable Python executable.
    echo Set the PYTHON_EXECUTABLE environment variable to provide your own
    echo Python executable path.
    echo
    echo The options are:
    echo  "--clean: clean built and installed files and exit."
    echo  "--dev:   configure the environment for development."
    echo  "--help:  display these help messages and exit."
    echo
    set +e
    exit
}


################################
# Defaults. Change these variables to customize this script locally
################################

#  thirdparty packages directory
export THIRDPARTY_LOC="thirdparty"

# requirements used by default or with --dev.
# note the use of constraints with -c 
REQUIREMENTS="--editable .[full] --constraint requirements.txt"
DEV_REQUIREMENTS="--editable .[full] --requirement requirements-dev.txt --constraint requirements.txt"

# default supported Python version
SUPPORTED_PYTHON3=3.6

################################

# Current directory where this script lives
PROJECT_ROOT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"


# parse command line options
CLI_ARGS="$REQUIREMENTS"

case "$1" in
    --help)    cli_help;;
    -c|--clean)   CLI_ARGS=--clean;;
    -d|--dev)     CLI_ARGS="$DEV_REQUIREMENTS";;
esac


# find a proper Python to run

if [[ "$PYTHON_EXECUTABLE" == "" ]]; then
    PYTHON_EXECUTABLE=python3
fi

################################
# setup development and run configure script

if [[ "$CLI_ARGS" == "$DEV_REQUIREMENTS" ]]; then
    # Add development tag file for license index auto-regeneration on file changes
    touch $PROJECT_ROOT_DIR/SCANCODE_DEV_MODE
fi


$PYTHON_EXECUTABLE "$PROJECT_ROOT_DIR/etc/configure.py" $CLI_ARGS

# Activate the virtualenv
if [[ -f "$PROJECT_ROOT_DIR/bin/activate" ]]; then
    source "$PROJECT_ROOT_DIR/bin/activate"
fi

set +e
